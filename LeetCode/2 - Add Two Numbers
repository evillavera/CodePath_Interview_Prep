#not gonna write out the test case for this one because we worked on this problem
#during class, please check out week 4 S1Q1

class Solution:
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
        num1 = 0
        num2 = 0
        multiplier1 = 1
        multiplier2 = 1

        temp_node1 = l1
        while(temp_node1 != None):
            num1 += temp_node1.val * multiplier1
            multiplier1 *= 10
            temp_node1 = temp_node1.next

        temp_node2 = l2
        while(temp_node2 != None):
            num2 += temp_node2.val * multiplier2
            multiplier2 *= 10
            temp_node2 = temp_node2.next

        res_sum = num1 + num2 

        #turn it back into a linked list
        digit = res_sum % 10
        res_sum = res_sum // 10
        node = ListNode(digit)
        res = node
        while(res_sum > 0):
            digit = res_sum % 10
            res_sum = res_sum // 10
            prev_node = node
            node = ListNode(digit)
            prev_node.next = node

        return res